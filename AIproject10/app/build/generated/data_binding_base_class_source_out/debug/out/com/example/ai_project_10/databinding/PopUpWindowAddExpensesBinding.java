// Generated by view binder compiler. Do not edit!
package com.example.ai_project_10.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ai_project_10.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopUpWindowAddExpensesBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button addExpenseButton;

  @NonNull
  public final EditText expenseAmount;

  @NonNull
  public final Spinner expenseCategory;

  @NonNull
  public final EditText expenseDate;

  @NonNull
  public final EditText expenseName;

  private PopUpWindowAddExpensesBinding(@NonNull FrameLayout rootView,
      @NonNull Button addExpenseButton, @NonNull EditText expenseAmount,
      @NonNull Spinner expenseCategory, @NonNull EditText expenseDate,
      @NonNull EditText expenseName) {
    this.rootView = rootView;
    this.addExpenseButton = addExpenseButton;
    this.expenseAmount = expenseAmount;
    this.expenseCategory = expenseCategory;
    this.expenseDate = expenseDate;
    this.expenseName = expenseName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopUpWindowAddExpensesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopUpWindowAddExpensesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_up_window_add_expenses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopUpWindowAddExpensesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_expense_button;
      Button addExpenseButton = ViewBindings.findChildViewById(rootView, id);
      if (addExpenseButton == null) {
        break missingId;
      }

      id = R.id.expenseAmount;
      EditText expenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (expenseAmount == null) {
        break missingId;
      }

      id = R.id.expenseCategory;
      Spinner expenseCategory = ViewBindings.findChildViewById(rootView, id);
      if (expenseCategory == null) {
        break missingId;
      }

      id = R.id.expense_date;
      EditText expenseDate = ViewBindings.findChildViewById(rootView, id);
      if (expenseDate == null) {
        break missingId;
      }

      id = R.id.expenseName;
      EditText expenseName = ViewBindings.findChildViewById(rootView, id);
      if (expenseName == null) {
        break missingId;
      }

      return new PopUpWindowAddExpensesBinding((FrameLayout) rootView, addExpenseButton,
          expenseAmount, expenseCategory, expenseDate, expenseName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
